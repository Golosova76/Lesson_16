let responseData;

fetch("https://jsonplaceholder.typicode.com/posts", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({ title: "foo", body: "bar", userId: 1 }),
})
  .then((response) => response.json()) // Парсим JSON
  .then((data) => {
    responseData = data; // Сохраняем ответ в переменную
  })
  .catch((error) => {
    responseData = error; // Сохраняем ошибку в переменную
  });

/*
комментарий
В JavaScript сетевые запросы (например fetch()) выполняются асинхронно. Это значит что JavaScript не ждет, пока запрос завершится, а продолжает выполнение кода. Когда вызывается fetch(), он возвращает Promise - объект, который обещает вернуть результат позже. 
///
Fetch API предоставляет интерфейс для получения ресурсов, эта встроенная функция JavaScript для выполнения HTTP-запросов.
///
fetch() - отправляет запрос и возвращает объект Promise, принимает один обязательный аргумент - путь к данным, которые
нужно получить (строка URL куда отправляется запрос). Второй аргумент - необязательный объект с настройками (method, headers, body и др).
///
Когда вызывается fetch(), браузер не останавливает выполнение кода и не ждет ответа от сервера. Вместо этого он сразу возвращает объект Promise, который "ожидает" завершения запроса. Когда сервер ответит, Promise выполнится успешно (fulfilled), даже если ответ содержит ошибку. Если успешно, тогда на полученном объекте Promise сработает метод then(). Если сети нет или сервер недоступен Promise завершится с ошибкой и сработает catch().
///
Второй аргумент это объект с настройками запроса, и он соответствует стандартному HTTP-запросу (Request), который используется в REST API. По сути, когда используешь fetch(), то отправляется обычный HTTP-запрос. 
Если не передавать второй аргумент в fetch(), то используется GET по умолчанию.
///

Метод .then() это метод объекта Promise  => что такое методы объекта??????

Этот метод принимает функцию-обработчик, которая выполнится, когда Promise завершится успешно. 
Что делает этот метод? Ждет пока Promise выполнится (fulfilled), получает аргументом результат выполнения Promise (в случае fetch() — это объект Response), и выполняет переданную функцию.
Можно использовать цепочку .then() для обработки данных



*/
